#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W     &kp E         &kp R                      &kp T                                               &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A             &kp S     &kp D         &kp F                      &kp G        &kp LG(LS(NUMBER_4))    &kp AT_SIGN    &kp H        &kp J  &kp K      &kp L    &kp MINUS
&mt LEFT_SHIFT Z  &kp X     &kp C         &kp V                      &kp B        &lt 5 COLON             &kp SEMICOLON  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LALT  &kp LEFT_WIN  &mt LEFT_SHIFT LANGUAGE_1  &lt 1 SPACE  &lt 3 LANG2             &kp BACKSPACE  &lt 2 ENTER                             &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_1 {
            bindings = <
&kp F1   &kp F2        &kp F3       &kp F4    &kp F5                &kp F6                &kp F7                 &kp F8           &kp F9         &kp DOLLAR
&kp TAB  &kp LEFT_WIN  &kp LS(TAB)  &mkp MB1  &mkp MB2  &kp    &kp  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN      &kp AMPERSAND  &kp F10
&kp      &kp           &kp          &kp       &kp       &kp    &kp  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION  &kp QUESTION   &kp DOUBLE_QUOTES
&kp      &kp           &kp          &kp       &kp       &kp    &kp  &kp                                                                          &kp HASH
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_2 {
            bindings = <
&kp ESCAPE      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                            &kp LG(W)        &kp LG(LEFT_ARROW)  &mkp MB3        &kp LG(RIGHT_ARROW)  &kp HOME
&kp TAB         &kp LEFT_WIN     &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))    &kp LG(T)  &kp LC(LS(TAB))  &mkp MB1            &kp UP_ARROW    &mkp MB2             &kp PAGE_UP
&kp LEFT_SHIFT  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                  &trans     &kp LC(TAB)      &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp PAGE_DOWN
&kp LCTRL       &kp LEFT_ALT     &trans           &kp DELETE       &kp ENTER     &kp BACKSPACE              &trans     &trans                                                                    &kp END
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_3 {
            bindings = <
&kp ESCAPE      &kp LG(A)  &kp LG(C)      &kp LC(UP_ARROW)    &kp LG(UP_ARROW)                                &kp PLUS      &kp MINUS  &kp N7        &kp N8        &kp NUMBER_9
&kp TAB         &kp LG(X)  &kp LG(V)      &kp LG(M)           &kp LG(LC(F))       &kp          &kp            &kp EQUAL     &kp COLON  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6
&kp LEFT_SHIFT  &kp LG(F)  &kp LS(LG(V))  &kp LC(DOWN_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(N)    &kp            &kp ASTERISK  &kp SLASH  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3
&kp LCTRL       &kp        &kp            &kp                 &kp                 &kp          &kp BACKSPACE  &kp ENTER                                            &kp NUMBER_0
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans    &trans       &trans                                                  &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                          &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                    &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
